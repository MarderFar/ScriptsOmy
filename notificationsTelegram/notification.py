import threading
import telebot
from telebot import types

bot = telebot.TeleBot('8213814908:AAFC7joj7aEnmWCFUGVwVMPe9UBCJbXyx70')

def create_main_inline_buttons():
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–í—ã–±–æ—Ä —Ç–µ—Å—Ç–∞ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è", callback_data="test_choice"))
    markup.add(types.InlineKeyboardButton("–ß—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç?", callback_data="bot_info"))
    markup.add(types.InlineKeyboardButton("–ú–æ–∏ –ü–æ–¥–ø–∏—Å–∫–∏", callback_data="purchases"))
    return markup

def send_telegram_report(telegram_id, test_name, score, status, image_path=None):
    if not telegram_id or not str(telegram_id).isdigit():
        print(f"‚ö†Ô∏è Telegram ID –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω ({telegram_id}) ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ.")
        return

    msg = (
        f"üìò *–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞!*\n\n"
        f"üß™ *–ù–∞–∑–≤–∞–Ω–∏–µ:* {test_name}\n"
        f"‚≠ê *–û—Ü–µ–Ω–∫–∞:* {score}\n"
        f"üìä *–°—Ç–∞—Ç—É—Å:* {status}"
    )

    def send():
        try:
            markup = create_main_inline_buttons()
            if image_path:
                with open(image_path, "rb") as photo:
                    bot.send_photo(int(telegram_id), photo, caption=msg, parse_mode="Markdown", reply_markup=markup)
            else:
                bot.send_message(int(telegram_id), msg, parse_mode="Markdown", reply_markup=markup)
            print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {telegram_id}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

    threading.Thread(target=send, daemon=True).start()
